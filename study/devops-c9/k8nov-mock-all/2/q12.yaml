# `kubectl create ns datastorage`
# `kubectl apply -f q12.yaml`
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv
  labels:
    type: local
spec:
  storageClassName: local-storage
  capacity:
    storage: 3Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc
  namespace: datastorage
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: datastorage
spec:
  selector:
    matchLabels:
      app: mysql
  replicas: 3
  minReadySeconds: 10
  template:
    metadata:
      labels:
        app: nginx
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mysql
        image: mysql:oraclelinux9
        ports:
        - containerPort: 80
          name: web
        volumeMounts:
        - name: www
          mountPath: /usr/share/nginx/html
        env:
          - name: MYSQL_DATABASE
            valueFrom:
              configMapRefKey:
                name: mysqlconfig
                key: MYSQL_DATABASE
          - name: MYSQL_USER
            valueFrom:
              configMapRefKey:
                name: mysqlconfig
                key: MYSQL_USER
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretRefKey:
                name: mysqlsecret
                key: MYSQL_ROOT_PASSWORD
          - name: MYSQL_PASSWORD
            valueFrom:
              secretRefKey:
                name: mysqlsecret
                key: MYSQL_PASSWORD
  volumeClaimTemplates:
  - metadata:
      name: www
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: local-path
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysqlconfig
  namespace: datastorage
data:
  MYSQL_DATABASE: mysql
  MYSQL_USER: user
---
apiVersion: v1
kind: Secret
metadata:
  name: mysqlsecret
  namespace: datastorage
stringData:
  MYSQL_ROOT_PASSWORD: password
  MYSQL_PASSWORD: password
